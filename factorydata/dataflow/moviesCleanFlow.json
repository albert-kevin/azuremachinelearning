{
	"name": "moviesCleanFlow",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "moviesCSV",
						"type": "DatasetReference"
					},
					"name": "Movies"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "outputCSV",
						"type": "DatasetReference"
					},
					"name": "MoviesClean"
				},
				{
					"dataset": {
						"referenceName": "outputCSV",
						"type": "DatasetReference"
					},
					"name": "MoviesbyYearSink"
				}
			],
			"transformations": [
				{
					"name": "MoviesCleanFlow"
				},
				{
					"name": "moviesByYear"
				}
			],
			"script": "source(output(\n\t\tmovieId as string,\n\t\ttitle as string,\n\t\tgenres as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false) ~> Movies\nMovies derive(year = toInteger(trim(right(title, 6), '()')),\n\t\ttitle = toString(left(title, length(title)-7))) ~> MoviesCleanFlow\nMoviesCleanFlow aggregate(groupBy(year),\n\tMoviesCount = count()) ~> moviesByYear\nMoviesCleanFlow sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['cleanedMoviesData'],\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> MoviesClean\nmoviesByYear sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['movies_by_year.csv'],\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> MoviesbyYearSink"
		}
	}
}